@model EDMS.Models.Document

@{
    ViewBag.Title = "Редактирование документа";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>@ViewBag.Title</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Number)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Number)
            @Html.ValidationMessageFor(model => model.Number)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ConclusionDate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ConclusionDate)
            @Html.ValidationMessageFor(model => model.ConclusionDate)
        </div>

        <div class="hidden-fields">
            @Html.HiddenFor(model => model.ID)
            @Html.HiddenFor(model => model.Status)
            @Html.HiddenFor(model => model.CreateDate)
            @Html.HiddenFor(model => model.OrganizationID)
            @Html.HiddenFor(model => model.CreatorID)
        </div>

        <p>
            <input type="submit" value="Сохранить"/>
        </p>
    </fieldset>
}

@using (Html.BeginForm("CancelEdit", "ClientDocument")) {
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.ID)
    @Html.HiddenFor(model => model.Number)
    @Html.HiddenFor(model => model.Name)
    @Html.HiddenFor(model => model.ConclusionDate)
    @Html.HiddenFor(model => model.Status)
    @Html.HiddenFor(model => model.CreateDate)
    @Html.HiddenFor(model => model.OrganizationID)
    @Html.HiddenFor(model => model.CreatorID)

    <p>
        <input type="submit" value="Отменить"/>
    </p>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
